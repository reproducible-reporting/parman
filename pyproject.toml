[build-system]
requires = ["setuptools>=65.0", "setuptools_scm[toml]>=7.1.0"]
build-backend = "setuptools.build_meta"

[project]
name = "Parman"
authors = [
  { name="Toon Verstraelen", email="toon.verstraelen@ugent.be" },
]
description = "Parman extends Python concurrent.futures to facilitate parallel workflows"
readme = "README.md"
license = {file = "LICENSE.txt"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    # Ensure changes to these dependencies are reflected in .github/requirements-old.txt
    "attrs>=23.1.0",
    "cattrs>=23.1.2"
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-xdist",
    "ase",
    "parsl",
    "numpy",
    "matplotlib",
]

[project.urls]
Issues = "https://github.com/reproducible-reporting/parman/issues"
Source = "https://github.com/reproducible-reporting/parman/"
Changelog = "https://github.com/reproducible-reporting/parman/blob/main/CHANGELOG.md"

[project.scripts]
parman-sbatch-wait = "parman.scripts.sbatch_wait:main"
parman-clean-results = "parman.scripts.clean_results:main"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = "-vv -n auto"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "A", "B", "BLE", "C4", "E", "EXE", "F", "I", "ICN", "ISC", "N", "NPY", "PERF", "PIE", "PL",
    "PT", "PYI", "RET", "RSE", "RUF", "SIM", "TRY", "UP", "W"
]
ignore = [
    "PLR0904",  # https://docs.astral.sh/ruff/rules/too-many-public-methods/
    "PLR0911",  # https://docs.astral.sh/ruff/rules/too-many-return-statements/
    "PLR0912",  # https://docs.astral.sh/ruff/rules/too-many-branches/
    "PLR0913",  # https://docs.astral.sh/ruff/rules/too-many-arguments/
    "PLR0914",  # https://docs.astral.sh/ruff/rules/too-many-locals/
    "PLR0915",  # https://docs.astral.sh/ruff/rules/too-many-statements/
    "PLR0916",  # https://docs.astral.sh/ruff/rules/too-many-boolean-expressions/
    "PLR0917",  # https://docs.astral.sh/ruff/rules/too-many-positional/
    "PLR2004",  # https://docs.astral.sh/ruff/rules/magic-value-comparison/
    "PLW2901",  # https://docs.astral.sh/ruff/rules/redefined-loop-name/
    "PT011",  # https://docs.astral.sh/ruff/rules/pytest-raises-too-broad/
    "RET503",  # https://docs.astral.sh/ruff/rules/implicit-return/
    "TRY003",  # https://docs.astral.sh/ruff/rules/raise-vanilla-args/
    "TRY300",  # https://docs.astral.sh/ruff/rules/try-consider-else/
    "TRY301",  # https://docs.astral.sh/ruff/rules/raise-within-try/
]

[tool.setuptools_scm]
write_to = "src/parman/_version.py"
version_scheme = "post-release"
local_scheme = "no-local-version"
